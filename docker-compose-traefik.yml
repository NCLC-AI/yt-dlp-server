version: '3.8'

services:
  git-cloner:
    image: alpine/git:latest
    container_name: git-cloner
    volumes:
      - app-source:/git-data
    entrypoint: ""
    command: >
      sh -c "
        if [ ! -d /git-data/.git ]; then
          echo 'Cloning repository...'
          git clone https://github.com/NCLC-AI/yt-dlp-server.git /git-data
        else
          echo 'Repository exists, pulling latest changes...'
          cd /git-data && git pull origin main
        fi &&
        echo 'Git operation completed successfully'
      "

  yt-dlp-server:
    image: n8nai/yt-dlp-server:latest
    container_name: yt-dlp-server
    restart: always
    depends_on:
      git-cloner:
        condition: service_completed_successfully
    volumes:
      - ./downloads:/app/downloads
      - app-source:/app/source
    environment:
      - PORT=5000
      - DOWNLOAD_DIR=/app/downloads
      - DEBUG=true
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app/source
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
      start_interval: 5s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ytdlp.rule=Host(`YOUR_YTDLP_DOMAIN`)"
      - "traefik.http.routers.ytdlp.entrypoints=websecure"
      - "traefik.http.routers.ytdlp.tls.certresolver=mytlschallenge"
      - "traefik.http.services.ytdlp.loadbalancer.server.port=5000"
    networks:
      - traefik_network  # 일반적인 Traefik 네트워크 이름

volumes:
  app-source:
    driver: local

networks:
  traefik_network:
    external: true
    # 기존에 생성된 Traefik 네트워크가 있다면 해당 이름으로 변경
    # 예: traefik_default, proxy, web 등
